[Architecture] Refactored the VFX system to be data-driven using a custom VFXData resource.
[Feature] VFXData resource now supports playback speed and contextual rotation, allowing for reversed and wall-oriented effects.
[Feature] Added one-shot VFX for dash, slide, and skid actions.
[Refactor] Improved jump and land animations (stretch/squish) to be driven by AnimationPlayer for better game feel.
[Bugfix] Fixed input priority allowing slide actions to correctly override the standard landing state when initiated mid-air.
[Bugfix] Resolved visual artifacts with wall slide and landing effects, ensuring they are correctly positioned and oriented.
[Bugfix] Fixed various crashes related to null references uncovered during the refactor.
[Technical] Introduced assert() statements as a best practice for defensive coding to catch missing Inspector assignments.
[Feature] Implemented checkpoint respawn system; player now respawns at the last activated checkpoint upon death.
[Architecture] Refactored the mission save state system to use a custom MissionSaveState resource, improving data structure and enabling editor-based setup.
[Feature] Added an in-editor tool to the PersistenceComponent to automatically generate unique object IDs.
[Refactor] Improved checkpoint workflow by adding a dedicated Marker2D for precise player respawn placement.
[Bugfix] Resolved parser errors related to singleton class_name conflicts and incorrect typed function returns.
[Refactor] Unified RescuedVillager to use the standard Interactable component, fixing a crash.
[Refactor] Unified Chest to use the standard Interactable component.
[Refactor] Moved pause input handling from PauseMenu to PlayerScript.
[Feature] Implemented QuitButton functionality in the PauseMenu.
[Refactor] Moved PlayerCamera into PlayerScene to create a self-contained prefab.
[Refactor] Removed hard-coded PauseMenu from level scene to rely on UIManager.
[Refactor] Simplified the interaction system to use direct calls to InteractionManager.
[Bugfix] Connected interaction signal in Prisoner script.
[Refactor] Converted all remaining gameplay and UI calls to use the EventBus.
[Architecture] Completed implementation of the global Event Bus system.
[Refactor] Decoupled PlayerCamera from the player's state machine using signals.
[Refactor] Replaced all hard-coded scene paths with exported PackedScene variables in the SceneManager.
[Refactor] Removed obsolete signals and constants to resolve script warnings.
[Refactor] Updated all player state scripts to use the PlayerStats resource.
[Feature] Implemented a global, event-based dialogue system.
[Refactor] Updated RescuedVillager to use the new dialogue system.
[Refactor] Centralized interaction prompt management under the UIManager.
[Bugfix] Fixed interaction prompt not appearing by connecting it to the InteractionManager's signals.
[Refactor] Updated mission end screens to use the EventBus for unpausing.
[Feature] Implement parallax background for levels to create visual depth.
[Feature] Add interactable Mission Board to Hideout, removing the old UI button.
[Feature] Implement "jump squat" and "stretch" animations for a more responsive feel.
[Feature] Add dust puff particle effects for jump, land, wall slide, and wall jump actions.
[Feature] Implement a "killzone" and respawn system for when the player falls out of a level.
[Feature] Add joypad/controller support for all UI menus.
[Refactor] Greatly improve camera system with vertical platform settling, jump deadzone, and ledge look-down.
[Refactor] Refactor Guard's vision cone to use a self-contained, multi-raycast component inspired by an addon.
[Refactor] Make all UI scenes responsive to the new low-resolution pixel art viewport.
[Refactor] Create unique Theme resources for Hideout and in-mission UI to allow for different font sizes.
[Refactor] Update AnimationController with a clearer match-based structure to prevent animation flip bugs.
[Refactor] Create a centralized end_dash() function to properly clean up particles and cooldowns.
[Bugfix] Fix issue where LedgeCheckRay and sprite would not flip correctly on the Guard.
[Bugfix] Resolve Convex decomposing failed! error by using rotation instead of negative scale to flip the vision cone.
[Bugfix] Fix one-frame animation flip glitch when jumping into a wall.
[Bugfix] Fix issue where jump_squat animation would loop indefinitely.
[Bugfix] Fix visual gap between player and wall during wall slide by using AnimationPlayer to offset the sprite.
[Bugfix] Resolve input loop where closing a dialogue box would immediately re-trigger an interaction.
[Bugfix] Fix various UI bugs related to the new pixel art viewport and layout containers.
[Bugfix] Fix bug where slide could not be triggered from a landing state.
